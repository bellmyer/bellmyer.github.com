{"ast":null,"code":"var _jsxFileName = \"/Users/bellmyer/Desktop/apps/coursera/react/conway/src/components/Main.jsx\";\nimport React, { Component } from 'react';\nimport Bunny from './Bunny';\nimport Grass from './Grass';\nimport Bomb from './Bomb';\nimport { EMPTY, OCCUPIED, EXPLODED } from '../shared/constants';\nimport { Button } from 'reactstrap';\nimport nextGrid from '../lib/grid';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.copyGrid = oldGrid => {\n      var newGrid = [];\n\n      for (var row = 0; row < oldGrid.length; row++) {\n        var fields = [];\n\n        for (var col = 0; col < oldGrid[row].length; col++) {\n          fields.push(oldGrid[row][col]);\n        }\n\n        newGrid.push(fields);\n      }\n\n      return newGrid;\n    };\n\n    this.updateTile = (row, col, status) => {\n      const grid = this.copyGrid(this.state.grid);\n      grid[row][col] = status;\n      this.setState({\n        grid: grid\n      });\n    };\n\n    this.tile = (row, col, status) => {\n      switch (status) {\n        case EMPTY:\n          return React.createElement(Grass, {\n            row: row,\n            col: col,\n            onClick: this.updateTile,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n\n        case OCCUPIED:\n          return React.createElement(Bunny, {\n            row: row,\n            col: col,\n            onClick: this.updateTile,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          });\n\n        case EXPLODED:\n          return React.createElement(Bomb, {\n            row: row,\n            col: col,\n            onClick: this.updateTile,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n\n        default:\n          return null;\n      }\n    };\n\n    this.rowTiles = (row, tiles) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, tiles.map((status, col) => this.tile(row, col, status)));\n    };\n\n    this.gridTiles = rows => {\n      return rows.map((row, index) => this.rowTiles(index, row));\n    };\n\n    this.nextGeneration = event => {\n      this.setState({\n        grid: nextGrid(this.state.grid)\n      });\n    };\n\n    this.state = {\n      gridn    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.gridTiles(this.state.grid), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.nextGeneration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Test\")));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/bellmyer/Desktop/apps/coursera/react/conway/src/components/Main.jsx"],"names":["React","Component","Bunny","Grass","Bomb","EMPTY","OCCUPIED","EXPLODED","Button","nextGrid","Main","constructor","props","copyGrid","oldGrid","newGrid","row","length","fields","col","push","updateTile","status","grid","state","setState","tile","rowTiles","tiles","map","gridTiles","rows","index","nextGeneration","event","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Bunny from './Bunny'\nimport Grass from './Grass'\nimport Bomb  from './Bomb'\nimport { EMPTY, OCCUPIED, EXPLODED } from '../shared/constants'\nimport { Button } from 'reactstrap'\nimport nextGrid from '../lib/grid'\n\nclass Main extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      grid: [\n        [EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY],\n        [OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED],\n        [EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED],\n        [EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY],\n        [OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED],\n        [EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED],\n        [EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY],\n        [OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED],\n        [EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED],\n        [EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY, OCCUPIED, EXPLODED, EMPTY]\n      ]\n    }\n  }\n\n  copyGrid = (oldGrid) => {\n    var newGrid = []\n\n    for (var row = 0; row < oldGrid.length; row++) {\n      var fields = []\n\n      for (var col = 0; col < oldGrid[row].length; col++) {\n        fields.push(oldGrid[row][col])\n      }\n\n      newGrid.push(fields)\n    }\n\n    return newGrid\n  }\n\n  updateTile = (row, col, status) => {\n    const grid = this.copyGrid(this.state.grid)\n\n    grid[row][col] = status\n\n    this.setState({\n      grid: grid\n    })\n  }\n\n  tile = (row, col, status) => {\n    switch(status) {\n      case EMPTY:\n        return (<Grass row={row} col={col} onClick={this.updateTile} />)\n      case OCCUPIED:\n        return (<Bunny row={row} col={col} onClick={this.updateTile} />)\n      case EXPLODED:\n        return (<Bomb row={row} col={col} onClick={this.updateTile} />)\n      default:\n        return null;\n    }\n  }\n\n  rowTiles = (row, tiles) => {\n    return (\n      <div>\n        { tiles.map((status, col) => this.tile(row, col, status)) }\n      </div>\n    )\n  }\n\n  gridTiles = (rows) => {\n    return rows.map((row, index) => this.rowTiles(index, row))\n  }\n\n  nextGeneration = (event) => {\n    this.setState({\n      grid: nextGrid(this.state.grid)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"col-12\">\n          { this.gridTiles(this.state.grid) }\n\n          <Button color=\"primary\" onClick={this.nextGeneration}>Test</Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}